{"version":3,"sources":["scripts/main.js"],"names":["listOfEmployees","document","querySelector","convertSalaryToNumber","salary","Number","replace","sortlist","list","employees","children","sort","a","b","salaryA","dataset","salaryB","innerHTML","forEach","employee","appendChild","getEmployees","map","name","textContent","position","age"],"mappings":";AAAA,aAuCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArCA,IAAMA,EAAkBC,SAASC,cAAc,MAE/C,SAASC,EAAsBC,GACtBC,OAAAA,OAAOD,EAAOE,QAAQ,aAAc,KAG7C,SAASC,EAASC,GACVC,IAAAA,EAAgBD,EAAAA,EAAKE,UAE3BD,EAAUE,KAAK,SAACC,EAAGC,GACXC,IAAAA,EAAUX,EAAsBS,EAAEG,QAAQX,QAGzCY,OAFSb,EAAsBU,EAAEE,QAAQX,QAE/BU,IAGnBN,EAAKS,UAAY,GAEjBR,EAAUS,QAAQ,SAACC,GACjBX,EAAKY,YAAYD,KAIrB,SAASE,EAAab,GAGbC,OAFeD,EAAAA,EAAKE,UAEVY,IAAI,SAAAH,GACZ,MAAA,CACLI,KAAMJ,EAASK,YACfC,SAAUN,EAASJ,QAAQU,SAC3BrB,OAAQD,EAAsBgB,EAASJ,QAAQX,QAC/CsB,IAAKP,EAASJ,QAAQW,OAK5BnB,EAASP,GACTqB,EAAarB","file":"main.1318452c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelector('ul');\n\nfunction convertSalaryToNumber(salary) {\n  return Number(salary.replace(/[^0-9.-]+/g, ''));\n}\n\nfunction sortlist(list) {\n  const employees = [...list.children];\n\n  employees.sort((a, b) => {\n    const salaryA = convertSalaryToNumber(a.dataset.salary);\n    const salaryB = convertSalaryToNumber(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  list.innerHTML = '';\n\n  employees.forEach((employee) => {\n    list.appendChild(employee);\n  });\n}\n\nfunction getEmployees(list) {\n  const employees = [...list.children];\n\n  return employees.map(employee => {\n    return {\n      name: employee.textContent,\n      position: employee.dataset.position,\n      salary: convertSalaryToNumber(employee.dataset.salary),\n      age: employee.dataset.age,\n    };\n  });\n}\n\nsortlist(listOfEmployees);\ngetEmployees(listOfEmployees);\n"]}